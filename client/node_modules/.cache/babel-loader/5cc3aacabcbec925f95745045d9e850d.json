{"ast":null,"code":"var _jsxFileName = \"/home/devuser/nodeblog/client/src/pages/Product/ProductForm.jsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { default as Container } from \"components/Container/Container\";\nimport { useHistory } from \"react-router-dom\";\nimport * as Yup from \"yup\";\nimport { Formik, Form } from \"formik\";\nimport NavBar from \"components/NavBar/NavBar\";\nimport { TextField, MenuItem, FormControl, Stack, Select, Button, IconButton } from \"@mui/material\";\nimport { styled } from \"@mui/material/styles\";\nimport PhotoCamera from \"@mui/icons-material/PhotoCamera\";\nimport { toast } from \"react-toastify\";\nimport { saveProduct } from \"helpers/product.helper\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Input = styled(\"input\")({\n  display: \"none\"\n});\nconst ProductSchema = Yup.object().shape({\n  title: Yup.string().min(5, \"Too Short!\").max(250, \"Too Long!\").required(\"Required\"),\n  description: Yup.string().min(50, \"Too Short!\").max(1000, \"Too Long!\").required(\"Required\"),\n  category: Yup.string().required(\"Required\"),\n  images: Yup.string().required(\"Please select an image.\")\n});\n\nfunction ProductForm() {\n  _s();\n\n  const history = useHistory();\n\n  const doSubmit = async product => {\n    try {\n      const data = new FormData();\n      data.append(\"productImages\", product.images); // remove image from product\n\n      delete product.images;\n      const newStateData = { ...product\n      };\n      data.set(\"product\", JSON.stringify(newStateData));\n      await saveProduct(data); // show toast notification of success\n\n      toast.success(\"Product Uploaded\");\n      history.push(\"/\");\n    } catch (ex) {\n      if (ex.response && ex.response.status === 400) {\n        toast.error(ex.response.data);\n      }\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(NavBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Upload Product\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Formik, {\n        initialValues: {\n          title: \"\",\n          description: \"\",\n          category: \"\",\n          images: \"\"\n        },\n        validationSchema: ProductSchema,\n        onSubmit: async (values, _ref) => {\n          let {\n            resetForm\n          } = _ref;\n          doSubmit(values);\n          resetForm();\n        },\n        children: _ref2 => {\n          let {\n            errors,\n            touched,\n            handleChange,\n            setFieldValue\n          } = _ref2;\n          return /*#__PURE__*/_jsxDEV(Form, {\n            children: [/*#__PURE__*/_jsxDEV(FormControl, {\n              sx: {\n                mt: 3,\n                mb: 3,\n                width: \"100%\"\n              },\n              children: [/*#__PURE__*/_jsxDEV(TextField, {\n                onChange: handleChange,\n                label: \"Title\",\n                variant: \"standard\",\n                name: \"title\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 86,\n                columnNumber: 17\n              }, this), errors.title && touched.title ? /*#__PURE__*/_jsxDEV(\"div\", {\n                children: errors.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 93,\n                columnNumber: 19\n              }, this) : null]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n              sx: {\n                mt: 3,\n                mb: 3,\n                width: \"100%\"\n              },\n              children: [/*#__PURE__*/_jsxDEV(TextField, {\n                multiline: true,\n                onChange: handleChange,\n                rows: 4,\n                label: \"Description\",\n                variant: \"standard\",\n                name: \"description\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 98,\n                columnNumber: 17\n              }, this), errors.description && touched.description ? /*#__PURE__*/_jsxDEV(\"div\", {\n                children: errors.description\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 107,\n                columnNumber: 19\n              }, this) : null]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n              sx: {\n                mt: 3,\n                mb: 3,\n                width: \"100%\"\n              },\n              children: [/*#__PURE__*/_jsxDEV(Select, {\n                name: \"category\",\n                onChange: handleChange,\n                displayEmpty: true,\n                inputProps: {\n                  \"aria-label\": \"Without label\"\n                },\n                children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: \"\",\n                  children: /*#__PURE__*/_jsxDEV(\"em\", {\n                    children: \"None\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 118,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 117,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: \"Electronics\",\n                  children: \"Electronics\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 120,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: \"Phones\",\n                  children: \"Phones\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 121,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: \"Clothes\",\n                  children: \"Clothes\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 122,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 111,\n                columnNumber: 17\n              }, this), errors.category && touched.category ? /*#__PURE__*/_jsxDEV(\"div\", {\n                children: errors.category\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 125,\n                columnNumber: 19\n              }, this) : null]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n              sx: {\n                mt: 3,\n                mb: 3,\n                width: \"100%\"\n              },\n              children: [/*#__PURE__*/_jsxDEV(Stack, {\n                direction: \"row\",\n                alignItems: \"center\",\n                spacing: 2,\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  children: \"Click to upload image(s)\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 130,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"icon-button-file\",\n                  children: [/*#__PURE__*/_jsxDEV(Input, {\n                    accept: \"image/*\",\n                    id: \"icon-button-file\",\n                    name: \"images\",\n                    onChange: event => {\n                      setFieldValue(\"images\", event.currentTarget.files[0]);\n                    },\n                    type: \"file\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 132,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n                    color: \"primary\",\n                    \"aria-label\": \"upload picture\",\n                    component: \"span\",\n                    children: /*#__PURE__*/_jsxDEV(PhotoCamera, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 146,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 141,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 131,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 129,\n                columnNumber: 17\n              }, this), errors.images && touched.images ? /*#__PURE__*/_jsxDEV(\"div\", {\n                children: errors.images\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 151,\n                columnNumber: 19\n              }, this) : null]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n              sx: {\n                mt: 3,\n                mb: 3,\n                width: \"20%\"\n              },\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                type: \"submit\",\n                variant: \"contained\",\n                children: \"Submit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 155,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 154,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 13\n          }, this);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ProductForm, \"9cZfZ04734qoCGIctmKX7+sX6eU=\", false, function () {\n  return [useHistory];\n});\n\n_c = ProductForm;\nexport default ProductForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProductForm\");","map":{"version":3,"sources":["/home/devuser/nodeblog/client/src/pages/Product/ProductForm.jsx"],"names":["React","default","Container","useHistory","Yup","Formik","Form","NavBar","TextField","MenuItem","FormControl","Stack","Select","Button","IconButton","styled","PhotoCamera","toast","saveProduct","Input","display","ProductSchema","object","shape","title","string","min","max","required","description","category","images","ProductForm","history","doSubmit","product","data","FormData","append","newStateData","set","JSON","stringify","success","push","ex","response","status","error","values","resetForm","errors","touched","handleChange","setFieldValue","mt","mb","width","event","currentTarget","files"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { default as Container } from \"components/Container/Container\";\nimport { useHistory } from \"react-router-dom\";\nimport * as Yup from \"yup\";\nimport { Formik, Form } from \"formik\";\nimport NavBar from \"components/NavBar/NavBar\";\nimport {\n  TextField,\n  MenuItem,\n  FormControl,\n  Stack,\n  Select,\n  Button,\n  IconButton,\n} from \"@mui/material\";\nimport { styled } from \"@mui/material/styles\";\nimport PhotoCamera from \"@mui/icons-material/PhotoCamera\";\nimport { toast } from \"react-toastify\";\nimport { saveProduct } from \"helpers/product.helper\";\n\nconst Input = styled(\"input\")({\n  display: \"none\",\n});\n\nconst ProductSchema = Yup.object().shape({\n  title: Yup.string()\n    .min(5, \"Too Short!\")\n    .max(250, \"Too Long!\")\n    .required(\"Required\"),\n  description: Yup.string()\n    .min(50, \"Too Short!\")\n    .max(1000, \"Too Long!\")\n    .required(\"Required\"),\n  category: Yup.string().required(\"Required\"),\n  images: Yup.string().required(\"Please select an image.\"),\n});\n\nfunction ProductForm() {\n  const history = useHistory();\n\n  const doSubmit = async (product) => {\n    try {\n      const data = new FormData();\n      data.append(\"productImages\", product.images);\n\n      // remove image from product\n      delete product.images;\n\n      const newStateData = { ...product };\n      data.set(\"product\", JSON.stringify(newStateData));\n\n      await saveProduct(data);\n\n      // show toast notification of success\n      toast.success(\"Product Uploaded\");\n\n      history.push(\"/\");\n    } catch (ex) {\n      if (ex.response && ex.response.status === 400) {\n        toast.error(ex.response.data);\n      }\n    }\n  };\n\n  return (\n    <React.Fragment>\n      <NavBar />\n      <Container>\n        <h1>Upload Product</h1>\n        <Formik\n          initialValues={{\n            title: \"\",\n            description: \"\",\n            category: \"\",\n            images: \"\",\n          }}\n          validationSchema={ProductSchema}\n          onSubmit={async (values, { resetForm }) => {\n            doSubmit(values);\n            resetForm();\n          }}\n        >\n          {({ errors, touched, handleChange, setFieldValue }) => (\n            <Form>\n              <FormControl sx={{ mt: 3, mb: 3, width: \"100%\" }}>\n                <TextField\n                  onChange={handleChange}\n                  label=\"Title\"\n                  variant=\"standard\"\n                  name=\"title\"\n                />\n                {errors.title && touched.title ? (\n                  <div>{errors.title}</div>\n                ) : null}\n              </FormControl>\n\n              <FormControl sx={{ mt: 3, mb: 3, width: \"100%\" }}>\n                <TextField\n                  multiline\n                  onChange={handleChange}\n                  rows={4}\n                  label=\"Description\"\n                  variant=\"standard\"\n                  name=\"description\"\n                />\n                {errors.description && touched.description ? (\n                  <div>{errors.description}</div>\n                ) : null}\n              </FormControl>\n              <FormControl sx={{ mt: 3, mb: 3, width: \"100%\" }}>\n                <Select\n                  name=\"category\"\n                  onChange={handleChange}\n                  displayEmpty\n                  inputProps={{ \"aria-label\": \"Without label\" }}\n                >\n                  <MenuItem value=\"\">\n                    <em>None</em>\n                  </MenuItem>\n                  <MenuItem value=\"Electronics\">Electronics</MenuItem>\n                  <MenuItem value=\"Phones\">Phones</MenuItem>\n                  <MenuItem value=\"Clothes\">Clothes</MenuItem>\n                </Select>\n                {errors.category && touched.category ? (\n                  <div>{errors.category}</div>\n                ) : null}\n              </FormControl>\n              <FormControl sx={{ mt: 3, mb: 3, width: \"100%\" }}>\n                <Stack direction=\"row\" alignItems=\"center\" spacing={2}>\n                  <label>Click to upload image(s)</label>\n                  <label htmlFor=\"icon-button-file\">\n                    <Input\n                      accept=\"image/*\"\n                      id=\"icon-button-file\"\n                      name=\"images\"\n                      onChange={(event) => {\n                        setFieldValue(\"images\", event.currentTarget.files[0]);\n                      }}\n                      type=\"file\"\n                    />\n                    <IconButton\n                      color=\"primary\"\n                      aria-label=\"upload picture\"\n                      component=\"span\"\n                    >\n                      <PhotoCamera />\n                    </IconButton>\n                  </label>\n                </Stack>\n                {errors.images && touched.images ? (\n                  <div>{errors.images}</div>\n                ) : null}\n              </FormControl>\n              <FormControl sx={{ mt: 3, mb: 3, width: \"20%\" }}>\n                <Button type=\"submit\" variant=\"contained\">\n                  Submit\n                </Button>\n              </FormControl>\n            </Form>\n          )}\n        </Formik>\n      </Container>\n    </React.Fragment>\n  );\n}\n\nexport default ProductForm;\n"]},"metadata":{},"sourceType":"module"}